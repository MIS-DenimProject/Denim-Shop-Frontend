import { FC, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { SidebarLogo } from '../../atoms/SidebarLogo';

interface LoginPageProps {}

const LoginPage: FC<LoginPageProps> = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const navigate = useNavigate();

  const handleLogin = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Mock authentication - in a real app, this would call an API
    if (username === 'admin' && password === 'admin') {
      localStorage.setItem('isAuthenticated', 'true');
      navigate('/dashboard');
    } else {
      setError('Invalid credentials');
    }
  };

  const handleQuickAccess = () => {
    setUsername('admin');
    setPassword('admin');
  };

  return (
    <div className="min-h-screen flex">
      {/* Left side - Branding */}
      <div className="w-1/3 bg-indigo-700 flex flex-col items-center justify-center p-8">
        <div className="mb-8">
          <SidebarLogo />
        </div>
        <h2 className="text-white text-2xl font-semibold mb-4">Denim Shop Management</h2>
        <p className="text-indigo-200 text-center">
          Streamline your denim production and quality control process
        </p>
      </div>

      {/* Right side - Login Form */}
      <div className="w-2/3 flex items-center justify-center p-8">
        <div className="max-w-md w-full">
          <h1 className="text-2xl font-bold text-gray-900 mb-6">Login to your account</h1>
          
          {error && (
            <div className="mb-4 p-3 bg-red-100 text-red-700 rounded-md">
              {error}
            </div>
          )}

          <form onSubmit={handleLogin} className="space-y-4">
            <div>
              <label htmlFor="username" className="block text-sm font-medium text-gray-700">
                Username
              </label>
              <input
                type="text"
                id="username"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                required
              />
            </div>

            <div>
              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
                Password
              </label>
              <input
                type="password"
                id="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                required
              />
            </div>

            <button
              type="submit"
              className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
            >
              Sign in
            </button>
          </form>

          {/* Quick Access Button - Remove in production */}
          <button
            onClick={handleQuickAccess}
            className="mt-4 w-full text-sm text-indigo-600 hover:text-indigo-500"
          >
            Quick Access (Development Only)
          </button>
        </div>
      </div>
    </div>
  );
};

export default LoginPage;